.. _domain_events:

도메인 이벤트 가이드 (Domain Events Guide)
========================================

:목적: 개발 전 주요 이벤트와 흐름 파악을 위해 요약 제공
:도메인: Eisenhower 매트릭스를 활용한 개인 일정관리 시스템
:범위: 프로젝트 초기 설계 단계

본 가이드는 프로젝트 개발 이전에 **핵심 도메인 이벤트**를 빠르게 이해하고, 기본적인 흐름을 잡기 위해 작성되었습니다.
구체적인 페이로드나 소비자 설계는 개발 과정에서 점진적으로 상세화할 수 있습니다.

---

1. 이벤트 카탈로그
------------------

| 이벤트명               | 분류          | 발생 조건                  |
|------------------------|--------------|----------------------------|
| UserRegistered         | 사용자 관리   | 회원가입 완료 후          |
| TaskCreated            | Task 관련    | Task 생성 요청 성공 후    |
| TaskStatusChanged      | Task 관련    | 상태 변경 요청 성공 후    |
| PriorityCalculated     | Priority 통합| 우선순위 계산 완료 시      |
| NotificationScheduled  | 알림 관리    | 알림 예약 요청 후         |

※ 위 목록은 기본 예시이며, 개발 진행 중 필요 시 추가·수정합니다.

---

2. 이벤트 흐름 개요
-------------------

1. **회원가입** → `UserRegistered` 이벤트 발행 → (후속 처리: 환영 메시지)
2. **Task 생성** → `TaskCreated` 이벤트 발행 → Priority 계산, 알림 예약
3. **Task 상태 변경** → `TaskStatusChanged` 이벤트 발행 → 알림 전송
4. **Priority 계산 완료** → `PriorityCalculated` 이벤트 발행 → 알림 예약
5. **알림 예약 완료** → `NotificationScheduled` 이벤트 발행 → 전송 준비

---

3. 초기 설계 지침
----------------

- **이벤트 중심 설계**: 핵심 이벤트만 골라 흐름을 정의합니다.
- **단계적 상세화**: 초기에는 이벤트 이름과 발생 조건만 문서화하고, 개발 중 페이로드 구조·소비자를 보완합니다.
- **유연한 확장**: 이벤트가 추가되거나 변경될 때, 이 가이드를 빠르게 업데이트합니다.

---

4. 다음 단계
------------

1. 핵심 이벤트에 대한 **페이로드 설계** (필수 필드 정의)
2. 각 이벤트의 **소비자(Consumer) 목록** 정리
3. **비동기 처리 메커니즘**(Bus, 큐) 선정 및 시나리오 검증
4. 상세 설계 문서(`domain_events.rst`)로 확장